{"version":3,"sources":["webpack://millan.[name]/webpack/universalModuleDefinition","webpack://millan.[name]/webpack/bootstrap","webpack://millan.[name]/./src/graphql/tokens.ts","webpack://millan.[name]/./src/graphql/BaseGraphQlParser.ts","webpack://millan.[name]/./src/graphql/StandardGraphQlParser.ts","webpack://millan.[name]/./src/graphql/StardogGraphQlVisitor.ts","webpack://millan.[name]/./src/graphql/StardogGraphQlParser.ts","webpack://millan.[name]/./src/graphql/index.ts"],"names":["root","factory","exports","module","define","amd","self","this","webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","oldJsonpFunction","slice","__webpack_exports__","graphQlTokenMap","graphQlTokens","stardogGraphQlTokenMap","stardogGraphQlTokens","chevrotain__WEBPACK_IMPORTED_MODULE_0__","helpers_regex__WEBPACK_IMPORTED_MODULE_1__","helpers_matchers__WEBPACK_IMPORTED_MODULE_2__","__assign","assign","arguments","INTEGER_PART_PATTERN","EXPONENT_PART_PATTERN","STRING_CHARACTER_PATTERN","and","many","or","BOOLEAN_PATTERN","NULL_PATTERN","ON_PATTERN","createAndPushTokenWithNameAlt","config","categories","Name","pattern","EnumValueToken","FragmentName","createAndPushToken","longer_alt","createAndPushPunctuator","Punctuator","token","NA","StringValueToken","CATEGORIES","ignoredTokens","WhiteSpace","group","SKIPPED","UnicodeBOM","LineTerminator","Comment","Comma","punctuators","Bang","Dollar","LParen","RParen","Spread","Colon","Equals","At","LBracket","RBracket","LCurly","RCurly","Pipe","Amp","nonKeywordTerminals","FloatValueToken","option","IntValueToken","BlockStringToken","StringToken","BooleanValueToken","NullValueToken","keywords","Query","Mutation","Subscription","Fragment","On","Schema","Extend","Scalar","TypeToken","Implements","Interface","Union","Enum","Input","DirectiveToken","QUERY","MUTATION","SUBSCRIPTION","FRAGMENT_DEFINITION","FRAGMENT_SPREAD","INLINE_FRAGMENT","SCHEMA","SCALAR","OBJECT","FIELD_DEFINITION","FIELD","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","ENUM","INPUT_OBJECT","INPUT_FIELD_DEFINITION","stardogDirectives","sort","reduce","accumulator","_a","toUpperCase","tokenMap","orderedTokens","concat","stardogArguments","stardogOrderByArgumentFieldPropertyToken","stardogOrderByArgumentDescPropertyToken","OrderByArgumentFieldPropertyToken","OrderByArgumentDescPropertyToken","finalTokens","extendStatics","__extends","b","setPrototypeOf","__proto__","Array","__","constructor","BaseGraphQlParser_BaseGraphQlParser","_super","BaseGraphQlParser","options","tokenVocab","_this","recoveryEnabled","outputCst","ignoredIssues","Arguments","OR","Directives","Value","tokenize","document","lexer","tokens","parse","entryRule","Document","input","cst","errors","RULE","AT_LEAST_ONE","SUBRULE","Definition","ALT","ExecutableDefinition","TypeSystemDefinition","TypeSystemExtension","OperationDefinition","FragmentDefinition","SelectionSet","OperationType","OPTION","CONSUME","OPTION1","VariableDefinitions","OPTION2","SUBRULE1","Selection","Field","InlineFragment","FragmentSpread","Alias","ARGS","OPTION3","isConst","Argument","TypeCondition","NamedType","GATE","Variable","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","MANY","ObjectField","VariableDefinition","Type","DefaultValue","ListType","Directive","SchemaDefinition","TypeDefinition","DirectiveDefinition","SchemaExtension","TypeExtension","OperationTypeDefinition","OperationTypeDefinitionList","Description","ScalarTypeDefinition","ObjectTypeDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","InputObjectTypeDefinition","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","ImplementsInterfaces","FieldsDefinition","SUBRULE2","CONSUME1","FieldDefinition","ArgumentsDefinition","InputValueDefinition","UnionMemberTypes","EnumValuesDefinition","EnumValueDefinition","InputFieldsDefinition","DirectiveLocations","DirectiveLocation","ExecutableDirectiveLocation","TypeSystemDirectiveLocation","api","StandardGraphQlParser_extends","StandardGraphQlParser","performSelfAnalysis","StardogGraphQlVisitor_extends","StardogGraphQlVisitor_assign","getStardogGraphQlVisitor","BaseVisitor","StardogGraphQlVisitor","sparqlErrors","visit","args","_i","map","error","BindDirective","ctx","stringValueNode","children","stringValueToken","$parseSparqlExpression","$mapErrors","ConditionalStardogDirective","conditionalStardogDirectiveArgumentsNode","ConditionalStardogDirectiveArguments","tokenForOffset","offsetPadding","tokenStartOffset","startOffset","tokenEndOffset","endOffset","tokenStartColumn","startColumn","tokenEndColumn","endColumn","errorStartOffset","errorEndOffset","errorStartColumn","errorEndColumn","startLine","endLine","innerExpressionImage","image","stardogSparqlParser","Expression","$resetState","StardogSparqlParser","validateVisitor","StardogGraphQlParser_extends","StardogGraphQlParser_StardogGraphQlParser","StardogGraphQlParser","visitCst","stardogGraphQlVisitor","BaseStardogGraphQlVisitor","getBaseCstVisitorConstructorWithDefaults","OVERRIDE_RULE","isTopLevel","StardogDirective","isField","StardogArgument","OrderByArgument","SkipArgument","OffsetArgument","FirstArgument","LimitArgument","IriArgument","BareStardogDirective","PrefixDirective","ConfigDirective","SkipDirective","IncludeDirective","FilterDirective","SkipDirectiveToken","IncludeDirectiveToken","FilterDirectiveToken","IfArgumentToken","OptionalDirective","TypeDirective","HideDirective","OptionalDirectiveToken","HideDirectiveToken","BindDirectiveToken","ToArgumentToken","PrefixDirectiveToken","ConfigDirectiveToken","ConfigDirectiveAlias","ConfigDirectiveGraph","ConfigDirectiveType","AliasArgument","OR1","GraphArgument","TypeArgument","OR2","OPTION4","SUBRULE3","OPTION5","SUBRULE4","OPTION6","OR3","OPTION7","OPTION8","AliasArgumentToken","AliasArgumentField","GraphArgumentToken","EnumValueOrString","OrderByArgumentToken","OrderByArgumentField","OrderByArgumentFieldProperty","OrderByArgumentDescProperty","OffsetArgumentToken","FirstArgumentToken","LimitArgumentToken","IriArgumentToken","graphqlTokens"],"mappings":"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","file":"millan.graphql.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"graphql\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"graphql\"] = factory();\n\telse\n\t\troot[\"millan\"] = root[\"millan\"] || {}, root[\"millan\"][\"graphql\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = (typeof self !== 'undefined' ? self : this)[\"webpackJsonp\"] = (typeof self !== 'undefined' ? self : this)[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([64,0,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { createToken, Lexer } from 'chevrotain';\nimport { regex } from 'helpers/regex';\nimport { STRING_LITERAL_LONG2 } from 'helpers/matchers';\n// Patterns:\nvar NAME_PATTERN = /[_A-Za-z][_0-9A-Za-z]*/;\nvar INTEGER_PART_PATTERN = /\\-?(?:0|[1-9][0-9]*)/;\nvar EXPONENT_PART_PATTERN = /[eE][+-]?[0-9]+/;\nvar ESCAPED_CHARACTER_PATTERN = /\\\\[\"\\\\/bfnrt]/;\nvar ESCAPED_UNICODE_PATTERN = /\\\\u[0-9A-Fa-f]{4}/;\nvar STRING_SOURCE_CHARACTER_PATTERN = /[\\u0009\\u0020\\u0021\\u0023-\\u005B\\u005D-\\uFFFF]/; // source character, but no '\"' or '\\' or line terminators\nvar STRING_CHARACTER_PATTERN = regex.and(/\"/, regex.many(regex.or(STRING_SOURCE_CHARACTER_PATTERN, ESCAPED_UNICODE_PATTERN, ESCAPED_CHARACTER_PATTERN)), /\"/);\nvar BOOLEAN_PATTERN = /true|false/;\nvar NULL_PATTERN = /null/;\nvar ON_PATTERN = /on/;\n// Holder of tokens; tokens are generally added and created in order, below.\nvar graphQlTokens = [];\n// Utility used primarily for keywords, which should also be counted as\n// matching the `Name` token and (except for special cases) the\n// `EnumValueToken` and `FragmentName` tokens. Ensures the created token has\n// those other tokens as categories, and ensures that `Name` will be matched\n// correctly for tokens that start with keyword characters but have additional\n// characters. Adds the created token to the `graphQlTokens` array.\nvar createAndPushTokenWithNameAlt = function (config) {\n    var categories = [Name];\n    if (config.pattern !== BOOLEAN_PATTERN && config.pattern !== NULL_PATTERN) {\n        categories.push(EnumValueToken);\n    }\n    if (config.pattern !== ON_PATTERN) {\n        categories.push(FragmentName);\n    }\n    return createAndPushToken({\n        name: config.name,\n        pattern: config.pattern,\n        longer_alt: Name,\n        categories: categories,\n    });\n};\nvar createAndPushPunctuator = function (config) {\n    return createAndPushToken(__assign({}, config, { categories: [Punctuator] }));\n};\n// Simple wrapper for `createToken` that also pushes the created token into\n// `graphQlTokens` at the time of creation, since order matters.\nvar createAndPushToken = function (config) {\n    var token = createToken(config);\n    graphQlTokens.push(token);\n    return token;\n};\n// Category tokens need to be created first, so they can be referenced by other\n// tokens. They are _not_ yet added to the `graphQlTokens` array so that they\n// do not match before various more specific keywords.\nvar Name = createToken({ name: 'Name', pattern: NAME_PATTERN });\n// `EnumValueToken` and `FragmentName` are purely abstract categories that will\n// be matched for all `Name` tokens _except_ the special tokens specified in\n// the GraphQL grammar. See `createAndPushTokenWithNameAlt` for details.\nvar EnumValueToken = createToken({\n    name: 'EnumValueToken',\n    pattern: Lexer.NA,\n});\nvar FragmentName = createToken({\n    name: 'FragmentName',\n    pattern: Lexer.NA,\n});\n// `StringValueToken` will match either BlockStrings or Strings.\nvar StringValueToken = createToken({\n    name: 'StringValueToken',\n    pattern: Lexer.NA,\n});\nvar Punctuator = createToken({\n    name: 'Punctuator',\n    pattern: Lexer.NA,\n});\n// Generally, anything that matches `Name` should match `EnumValueToken` and\n// `FragmentName`. NOTE, however that `On` will not match `FragmentName` and\n// `BooleanValueToken` and `NullValueToken` will not match `EnumValueToken`, in\n// accordance with the official grammar; this is handled by the fact that the\n// `On`, `BooleanValueToken`, and `FragmentName` tokens are defined and pushed\n// into the tokens array earlier than `Name`. Given\n// `createAndPushTokenWithNameAlt`, the latter tokens will also be treated as\n// `Name` tokens, but will NOT be treated as instances of the relevant\n// `EnumValueToken` or `FragmentName`. That's exactly what we want.\nName.CATEGORIES.push(EnumValueToken, FragmentName);\nvar ignoredTokens = {\n    WhiteSpace: createAndPushToken({\n        name: 'WhiteSpace',\n        pattern: /[ \\t]+/,\n        group: Lexer.SKIPPED,\n    }),\n    UnicodeBOM: createAndPushToken({\n        name: 'UnicodeBOM',\n        pattern: '\\\\uFFFE',\n        group: Lexer.SKIPPED,\n    }),\n    LineTerminator: createAndPushToken({\n        name: 'LineTerminator',\n        pattern: /\\n\\r|\\r|\\n/,\n        group: Lexer.SKIPPED,\n    }),\n    Comment: createAndPushToken({\n        name: 'Comment',\n        pattern: /#[^\\n\\r]*/,\n        group: Lexer.SKIPPED,\n    }),\n    Comma: createAndPushToken({\n        name: 'Comma',\n        pattern: ',',\n        group: Lexer.SKIPPED,\n    }),\n};\nvar punctuators = {\n    Bang: createAndPushPunctuator({ name: 'Bang', pattern: '!' }),\n    Dollar: createAndPushPunctuator({ name: 'Dollar', pattern: '$' }),\n    LParen: createAndPushPunctuator({ name: 'LParen', pattern: '(' }),\n    RParen: createAndPushPunctuator({ name: 'RParen', pattern: ')' }),\n    Spread: createAndPushPunctuator({ name: 'Spread', pattern: '...' }),\n    Colon: createAndPushPunctuator({ name: 'Colon', pattern: ':' }),\n    Equals: createAndPushPunctuator({ name: 'Equals', pattern: '=' }),\n    At: createAndPushPunctuator({ name: 'At', pattern: '@' }),\n    LBracket: createAndPushPunctuator({ name: 'LBracket', pattern: '[' }),\n    RBracket: createAndPushPunctuator({ name: 'RBracket', pattern: ']' }),\n    LCurly: createAndPushPunctuator({ name: 'LCurly', pattern: '{' }),\n    RCurly: createAndPushPunctuator({ name: 'RCurly', pattern: '}' }),\n    Pipe: createAndPushPunctuator({ name: 'Pipe', pattern: '|' }),\n    Amp: createAndPushPunctuator({ name: 'Amp', pattern: '&' }),\n    Punctuator: Punctuator,\n};\nvar nonKeywordTerminals = {\n    FloatValueToken: createAndPushToken({\n        name: 'FloatValueToken',\n        pattern: regex.and(INTEGER_PART_PATTERN, regex.or(regex.and(/\\.[0-9]+/, regex.option(EXPONENT_PART_PATTERN)), EXPONENT_PART_PATTERN)),\n    }),\n    IntValueToken: createAndPushToken({\n        name: 'IntValueToken',\n        pattern: INTEGER_PART_PATTERN,\n    }),\n    BlockStringToken: createAndPushToken({\n        name: 'BlockStringToken',\n        pattern: STRING_LITERAL_LONG2,\n        categories: [StringValueToken],\n    }),\n    StringToken: createAndPushToken({\n        name: 'StringToken',\n        pattern: STRING_CHARACTER_PATTERN,\n        categories: [StringValueToken],\n    }),\n    BooleanValueToken: createAndPushTokenWithNameAlt({\n        name: 'BooleanValueToken',\n        pattern: BOOLEAN_PATTERN,\n    }),\n    NullValueToken: createAndPushTokenWithNameAlt({\n        name: 'NullValueToken',\n        pattern: NULL_PATTERN,\n    }),\n    EnumValueToken: EnumValueToken,\n    FragmentName: FragmentName,\n    Name: Name,\n    StringValueToken: StringValueToken,\n};\nvar keywords = {\n    Query: createAndPushTokenWithNameAlt({\n        name: 'Query',\n        pattern: 'query',\n    }),\n    Mutation: createAndPushTokenWithNameAlt({\n        name: 'Mutation',\n        pattern: 'mutation',\n    }),\n    Subscription: createAndPushTokenWithNameAlt({\n        name: 'Subscription',\n        pattern: 'subscription',\n    }),\n    Fragment: createAndPushTokenWithNameAlt({\n        name: 'Fragment',\n        pattern: 'fragment',\n    }),\n    On: createAndPushTokenWithNameAlt({\n        name: 'On',\n        pattern: ON_PATTERN,\n    }),\n    Schema: createAndPushTokenWithNameAlt({\n        name: 'Schema',\n        pattern: 'schema',\n    }),\n    Extend: createAndPushTokenWithNameAlt({\n        name: 'Extend',\n        pattern: 'extend',\n    }),\n    Scalar: createAndPushTokenWithNameAlt({\n        name: 'Scalar',\n        pattern: 'scalar',\n    }),\n    TypeToken: createAndPushTokenWithNameAlt({\n        name: 'TypeToken',\n        pattern: 'type',\n    }),\n    Implements: createAndPushTokenWithNameAlt({\n        name: 'Implements',\n        pattern: 'implements',\n    }),\n    Interface: createAndPushTokenWithNameAlt({\n        name: 'Interface',\n        pattern: 'interface',\n    }),\n    Union: createAndPushTokenWithNameAlt({\n        name: 'Union',\n        pattern: 'union',\n    }),\n    Enum: createAndPushTokenWithNameAlt({\n        name: 'Enum',\n        pattern: 'enum',\n    }),\n    Input: createAndPushTokenWithNameAlt({\n        name: 'Input',\n        pattern: 'input',\n    }),\n    DirectiveToken: createAndPushTokenWithNameAlt({\n        name: 'DirectiveToken',\n        pattern: 'directive',\n    }),\n    QUERY: createAndPushTokenWithNameAlt({ name: 'QUERY', pattern: 'QUERY' }),\n    MUTATION: createAndPushTokenWithNameAlt({\n        name: 'MUTATION',\n        pattern: 'MUTATION',\n    }),\n    SUBSCRIPTION: createAndPushTokenWithNameAlt({\n        name: 'SUBSCRIPTION',\n        pattern: 'SUBSCRIPTION',\n    }),\n    FRAGMENT_DEFINITION: createAndPushTokenWithNameAlt({\n        name: 'FRAGMENT_DEFINITION',\n        pattern: 'FRAGMENT_DEFINITION',\n    }),\n    FRAGMENT_SPREAD: createAndPushTokenWithNameAlt({\n        name: 'FRAGMENT_SPREAD',\n        pattern: 'FRAGMENT_SPREAD',\n    }),\n    INLINE_FRAGMENT: createAndPushTokenWithNameAlt({\n        name: 'INLINE_FRAGMENT',\n        pattern: 'INLINE_FRAGMENT',\n    }),\n    SCHEMA: createAndPushTokenWithNameAlt({ name: 'SCHEMA', pattern: 'SCHEMA' }),\n    SCALAR: createAndPushTokenWithNameAlt({ name: 'SCALAR', pattern: 'SCALAR' }),\n    OBJECT: createAndPushTokenWithNameAlt({ name: 'OBJECT', pattern: 'OBJECT' }),\n    FIELD_DEFINITION: createAndPushTokenWithNameAlt({\n        name: 'FIELD_DEFINITION',\n        pattern: 'FIELD_DEFINITION',\n    }),\n    FIELD: createAndPushTokenWithNameAlt({ name: 'FIELD', pattern: 'FIELD' }),\n    ARGUMENT_DEFINITION: createAndPushTokenWithNameAlt({\n        name: 'ARGUMENT_DEFINITION',\n        pattern: 'ARGUMENT_DEFINITION',\n    }),\n    INTERFACE: createAndPushTokenWithNameAlt({\n        name: 'INTERFACE',\n        pattern: 'INTERFACE',\n    }),\n    UNION: createAndPushTokenWithNameAlt({ name: 'UNION', pattern: 'UNION' }),\n    ENUM_VALUE: createAndPushTokenWithNameAlt({\n        name: 'ENUM_VALUE',\n        pattern: 'ENUM_VALUE',\n    }),\n    ENUM: createAndPushTokenWithNameAlt({ name: 'ENUM', pattern: 'ENUM' }),\n    INPUT_OBJECT: createAndPushTokenWithNameAlt({\n        name: 'INPUT_OBJECT',\n        pattern: 'INPUT_OBJECT',\n    }),\n    INPUT_FIELD_DEFINITION: createAndPushTokenWithNameAlt({\n        name: 'INPUT_FIELD_DEFINITION',\n        pattern: 'INPUT_FIELD_DEFINITION',\n    }),\n};\nvar graphQlTokenMap = __assign({}, ignoredTokens, punctuators, nonKeywordTerminals, keywords, { Name: Name });\nvar stardogDirectives = [\n    'optional',\n    'bind',\n    'hide',\n    'skip',\n    'include',\n    'filter',\n    'prefix',\n    'config',\n]\n    .sort()\n    .reduce(function (accumulator, name) {\n    var _a;\n    var key = \"\" + name[0].toUpperCase() + name.slice(1) + \"DirectiveToken\";\n    var token = createToken({\n        name: key,\n        pattern: name,\n        categories: [Name, EnumValueToken, FragmentName],\n        longer_alt: Name,\n    });\n    return __assign({}, accumulator, { tokenMap: __assign({}, accumulator.tokenMap, (_a = {}, _a[key] = token, _a)), orderedTokens: accumulator.orderedTokens.concat(token) });\n}, { tokenMap: {}, orderedTokens: [] });\nvar stardogArguments = [\n    'orderBy',\n    'first',\n    'to',\n    'if',\n    'alias',\n    'graph',\n    'offset',\n    'limit',\n    'iri',\n]\n    .sort()\n    .reduce(function (accumulator, name) {\n    var _a;\n    var key = \"\" + name[0].toUpperCase() + name.slice(1) + \"ArgumentToken\";\n    var token = createToken({\n        name: key,\n        pattern: name,\n        categories: [Name, EnumValueToken, FragmentName],\n        longer_alt: Name,\n    });\n    return __assign({}, accumulator, { tokenMap: __assign({}, accumulator.tokenMap, (_a = {}, _a[key] = token, _a)), orderedTokens: accumulator.orderedTokens.concat(token) });\n}, { tokenMap: {}, orderedTokens: [] });\n// These two tokens aren't really arguments or directives; instead, they're\n// fields of objects that can be passed as the stardog `orderBy` argument.\nvar stardogOrderByArgumentFieldPropertyToken = createToken({\n    name: 'OrderByArgumentFieldPropertyToken',\n    pattern: 'field',\n    categories: [Name, EnumValueToken, FragmentName],\n    longer_alt: Name,\n});\nvar stardogOrderByArgumentDescPropertyToken = createToken({\n    name: 'OrderByArgumentDescPropertyToken',\n    pattern: 'desc',\n    categories: [Name, EnumValueToken, FragmentName],\n    longer_alt: Name,\n});\nvar stardogGraphQlTokenMap = __assign({}, graphQlTokenMap, stardogDirectives.tokenMap, stardogArguments.tokenMap, { OrderByArgumentFieldPropertyToken: stardogOrderByArgumentFieldPropertyToken, OrderByArgumentDescPropertyToken: stardogOrderByArgumentDescPropertyToken });\nvar stardogGraphQlTokens = graphQlTokens.concat(stardogDirectives.orderedTokens, stardogArguments.orderedTokens, [\n    stardogOrderByArgumentFieldPropertyToken,\n    stardogOrderByArgumentDescPropertyToken,\n]);\n// Add shared category and catch-all tokens.\nvar finalTokens = [\n    FragmentName,\n    EnumValueToken,\n    Name,\n    StringValueToken,\n    Punctuator,\n];\ngraphQlTokens.push.apply(graphQlTokens, finalTokens);\nstardogGraphQlTokens.push.apply(stardogGraphQlTokens, finalTokens);\nexport { graphQlTokenMap, graphQlTokens, stardogGraphQlTokenMap, stardogGraphQlTokens, };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar graphQlTokenMap = require('./tokens').graphQlTokenMap;\nimport { Parser, Lexer, } from 'chevrotain';\nvar BaseGraphQlParser = /** @class */ (function (_super) {\n    __extends(BaseGraphQlParser, _super);\n    function BaseGraphQlParser(options, tokenVocab) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, tokenVocab, __assign({ recoveryEnabled: true, outputCst: true }, options.config, { ignoredIssues: {\n                Arguments: {\n                    OR: true,\n                },\n                Directives: {\n                    OR: true,\n                },\n                Value: {\n                    OR: true,\n                },\n            } })) || this;\n        _this.tokenize = function (document) {\n            return _this.lexer.tokenize(document).tokens;\n        };\n        _this.parse = function (document, entryRule) {\n            if (entryRule === void 0) { entryRule = _this.Document; }\n            _this.input = _this.lexer.tokenize(document).tokens;\n            var cst = entryRule.call(_this);\n            var errors = _this.errors;\n            return {\n                errors: errors,\n                cst: cst,\n            };\n        };\n        _this.Document = _this.RULE('Document', function () {\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.Definition); });\n        });\n        _this.Definition = _this.RULE('Definition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.ExecutableDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeSystemDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeSystemExtension); } },\n            ]);\n        });\n        _this.ExecutableDefinition = _this.RULE('ExecutableDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.OperationDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.FragmentDefinition); } },\n            ]);\n        });\n        _this.OperationDefinition = _this.RULE('OperationDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SelectionSet); } },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.OperationType);\n                        _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Name); });\n                        _this.OPTION1(function () { return _this.SUBRULE(_this.VariableDefinitions); });\n                        _this.OPTION2(function () { return _this.SUBRULE(_this.Directives); });\n                        _this.SUBRULE1(_this.SelectionSet);\n                    },\n                },\n            ]);\n        });\n        _this.OperationType = _this.RULE('OperationType', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.Query); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.Mutation); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.Subscription); } },\n            ]);\n        });\n        _this.SelectionSet = _this.RULE('SelectionSet', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.Selection); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.Selection = _this.RULE('Selection', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Field); } },\n                { ALT: function () { return _this.SUBRULE(_this.InlineFragment); } },\n                { ALT: function () { return _this.SUBRULE(_this.FragmentSpread); } },\n            ]);\n        });\n        _this.Field = _this.RULE('Field', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Alias); });\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Arguments, { ARGS: [false /* isConst */] });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.Directives); });\n            _this.OPTION3(function () { return _this.SUBRULE(_this.SelectionSet); });\n        });\n        _this.Alias = _this.RULE('Alias', function () {\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.CONSUME(graphQlTokenMap.Colon);\n        });\n        _this.Arguments = _this.RULE('Arguments', function (isConst) {\n            _this.CONSUME(graphQlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.Argument, { ARGS: [isConst] }); });\n            _this.CONSUME(graphQlTokenMap.RParen);\n        });\n        _this.Argument = _this.RULE('Argument', function (isConst) {\n            _this.SUBRULE(_this.Alias);\n            _this.SUBRULE(_this.Value, { ARGS: [isConst] });\n        });\n        _this.FragmentSpread = _this.RULE('FragmentSpread', function () {\n            _this.CONSUME(graphQlTokenMap.Spread);\n            _this.CONSUME(graphQlTokenMap.FragmentName);\n            _this.OPTION(function () { return _this.SUBRULE(_this.Directives); });\n        });\n        _this.InlineFragment = _this.RULE('InlineFragment', function () {\n            _this.CONSUME(graphQlTokenMap.Spread);\n            _this.OPTION(function () { return _this.SUBRULE(_this.TypeCondition); });\n            _this.OPTION1(function () { return _this.SUBRULE(_this.Directives); });\n            _this.SUBRULE(_this.SelectionSet);\n        });\n        _this.FragmentDefinition = _this.RULE('FragmentDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.Fragment);\n            _this.CONSUME(graphQlTokenMap.FragmentName);\n            _this.SUBRULE(_this.TypeCondition);\n            _this.OPTION(function () { return _this.SUBRULE(_this.Directives); });\n            _this.SUBRULE(_this.SelectionSet);\n        });\n        _this.TypeCondition = _this.RULE('TypeCondition', function () {\n            _this.CONSUME(graphQlTokenMap.On);\n            _this.SUBRULE(_this.NamedType);\n        });\n        _this.Value = _this.RULE('Value', function (isConst) {\n            _this.OR([\n                { GATE: function () { return !isConst; }, ALT: function () { return _this.SUBRULE(_this.Variable); } },\n                { ALT: function () { return _this.SUBRULE(_this.IntValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.FloatValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.StringValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.BooleanValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.NullValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.EnumValue); } },\n                { ALT: function () { return _this.SUBRULE(_this.ListValue, { ARGS: [isConst] }); } },\n                { ALT: function () { return _this.SUBRULE(_this.ObjectValue, { ARGS: [isConst] }); } },\n            ]);\n        });\n        _this.IntValue = _this.RULE('IntValue', function () {\n            _this.CONSUME(graphQlTokenMap.IntValueToken);\n        });\n        _this.FloatValue = _this.RULE('FloatValue', function () {\n            _this.CONSUME(graphQlTokenMap.FloatValueToken);\n        });\n        _this.StringValue = _this.RULE('StringValue', function () {\n            _this.CONSUME(graphQlTokenMap.StringValueToken);\n        });\n        _this.BooleanValue = _this.RULE('BooleanValue', function () {\n            _this.CONSUME(graphQlTokenMap.BooleanValueToken);\n        });\n        _this.NullValue = _this.RULE('NullValue', function () {\n            _this.CONSUME(graphQlTokenMap.NullValueToken);\n        });\n        _this.EnumValue = _this.RULE('EnumValue', function () {\n            _this.CONSUME(graphQlTokenMap.EnumValueToken);\n        });\n        _this.ListValue = _this.RULE('ListValue', function (isConst) {\n            _this.CONSUME(graphQlTokenMap.LBracket);\n            _this.MANY(function () { return _this.SUBRULE(_this.Value, { ARGS: [isConst] }); });\n            _this.CONSUME(graphQlTokenMap.RBracket);\n        });\n        _this.ObjectValue = _this.RULE('ObjectValue', function (isConst) {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.MANY(function () { return _this.SUBRULE(_this.ObjectField, { ARGS: [isConst] }); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.ObjectField = _this.RULE('ObjectField', function (isConst) {\n            _this.SUBRULE(_this.Alias);\n            _this.SUBRULE(_this.Value, { ARGS: [isConst] });\n        });\n        _this.VariableDefinitions = _this.RULE('VariableDefinitions', function () {\n            _this.CONSUME(graphQlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.VariableDefinition); });\n            _this.CONSUME(graphQlTokenMap.RParen);\n        });\n        _this.VariableDefinition = _this.RULE('VariableDefinition', function () {\n            _this.SUBRULE(_this.Variable);\n            _this.CONSUME(graphQlTokenMap.Colon);\n            _this.SUBRULE(_this.Type);\n            _this.OPTION(function () { return _this.SUBRULE(_this.DefaultValue); });\n        });\n        _this.Variable = _this.RULE('Variable', function () {\n            _this.CONSUME(graphQlTokenMap.Dollar);\n            _this.CONSUME(graphQlTokenMap.Name);\n        });\n        _this.DefaultValue = _this.RULE('DefaultValue', function () {\n            _this.CONSUME(graphQlTokenMap.Equals);\n            _this.SUBRULE(_this.Value, { ARGS: [true /* isConst */] });\n        });\n        _this.Type = _this.RULE('Type', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.NamedType); } },\n                { ALT: function () { return _this.SUBRULE(_this.ListType); } },\n            ]);\n            _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Bang); });\n        });\n        _this.NamedType = _this.RULE('NamedType', function () {\n            _this.CONSUME(graphQlTokenMap.Name);\n        });\n        _this.ListType = _this.RULE('ListType', function () {\n            _this.CONSUME(graphQlTokenMap.LBracket);\n            _this.SUBRULE(_this.Type);\n            _this.CONSUME(graphQlTokenMap.RBracket);\n        });\n        _this.Directives = _this.RULE('Directives', function (isConst) {\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.Directive, { ARGS: [isConst] }); });\n        });\n        _this.Directive = _this.RULE('Directive', function (isConst) {\n            _this.CONSUME(graphQlTokenMap.At);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION(function () { return _this.SUBRULE(_this.Arguments, { ARGS: [isConst] }); });\n        });\n        _this.TypeSystemDefinition = _this.RULE('TypeSystemDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SchemaDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.DirectiveDefinition); } },\n            ]);\n        });\n        _this.TypeSystemExtension = _this.RULE('TypeSystemExtension', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SchemaExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeExtension); } },\n            ]);\n        });\n        _this.SchemaDefinition = _this.RULE('SchemaDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.Schema);\n            _this.OPTION(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.OperationTypeDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.SchemaExtension = _this.RULE('SchemaExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Schema);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE1(_this.OperationTypeDefinitionList); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE(_this.OperationTypeDefinitionList); } },\n            ]);\n        });\n        _this.OperationTypeDefinitionList = _this.RULE('OperationTypeDefinitionList', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.OperationTypeDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.OperationTypeDefinition = _this.RULE('OperationTypeDefinition', function () {\n            _this.SUBRULE(_this.OperationType);\n            _this.CONSUME(graphQlTokenMap.Colon);\n            _this.SUBRULE(_this.NamedType);\n        });\n        _this.Description = _this.RULE('Description', function () {\n            _this.SUBRULE(_this.StringValue);\n        });\n        _this.TypeDefinition = _this.RULE('TypeDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.ScalarTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.ObjectTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.InterfaceTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.UnionTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.EnumTypeDefinition); } },\n                { ALT: function () { return _this.SUBRULE(_this.InputObjectTypeDefinition); } },\n            ]);\n        });\n        _this.TypeExtension = _this.RULE('TypeExtension', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.ScalarTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.ObjectTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.InterfaceTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.UnionTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.EnumTypeExtension); } },\n                { ALT: function () { return _this.SUBRULE(_this.InputObjectTypeExtension); } },\n            ]);\n        });\n        _this.ScalarTypeDefinition = _this.RULE('ScalarTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Scalar);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n        });\n        _this.ScalarTypeExtension = _this.RULE('ScalarTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Scalar);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n        });\n        _this.ObjectTypeDefinition = _this.RULE('ObjectTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.TypeToken);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () { return _this.SUBRULE(_this.ImplementsInterfaces); });\n            _this.OPTION2(function () {\n                return _this.SUBRULE1(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION3(function () { return _this.SUBRULE(_this.FieldsDefinition); });\n        });\n        _this.ObjectTypeExtension = _this.RULE('ObjectTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.TypeToken);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.ImplementsInterfaces);\n                        _this.OPTION(function () {\n                            return _this.SUBRULE1(_this.Directives, { ARGS: [true /* isConst */] });\n                        });\n                        _this.OPTION1(function () { return _this.SUBRULE(_this.FieldsDefinition); });\n                    },\n                },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION2(function () { return _this.SUBRULE1(_this.FieldsDefinition); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE2(_this.FieldsDefinition); } },\n            ]);\n        });\n        _this.ImplementsInterfaces = _this.RULE('ImplementsInterfaces', function () {\n            _this.CONSUME(graphQlTokenMap.Implements);\n            _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Amp); });\n            _this.SUBRULE(_this.NamedType);\n            _this.MANY(function () {\n                _this.CONSUME1(graphQlTokenMap.Amp);\n                _this.SUBRULE1(_this.NamedType);\n            });\n        });\n        _this.FieldsDefinition = _this.RULE('FieldsDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.FieldDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.FieldDefinition = _this.RULE('FieldDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () { return _this.SUBRULE(_this.ArgumentsDefinition); });\n            _this.CONSUME(graphQlTokenMap.Colon);\n            _this.SUBRULE(_this.Type);\n            _this.OPTION2(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n        });\n        _this.ArgumentsDefinition = _this.RULE('ArgumentsDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.InputValueDefinition); });\n            _this.CONSUME(graphQlTokenMap.RParen);\n        });\n        _this.InputValueDefinition = _this.RULE('InputValueDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.CONSUME(graphQlTokenMap.Colon);\n            _this.SUBRULE(_this.Type);\n            _this.OPTION1(function () { return _this.SUBRULE(_this.DefaultValue); });\n            _this.OPTION2(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n        });\n        _this.InterfaceTypeDefinition = _this.RULE('InterfaceTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Interface);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION2(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION3(function () { return _this.SUBRULE(_this.FieldsDefinition); });\n        });\n        _this.InterfaceTypeExtension = _this.RULE('InterfaceTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Interface);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE(_this.FieldsDefinition); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE1(_this.FieldsDefinition); } },\n            ]);\n        });\n        _this.UnionTypeDefinition = _this.RULE('UnionTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Union);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.UnionMemberTypes); });\n        });\n        _this.UnionMemberTypes = _this.RULE('UnionMemberTypes', function () {\n            _this.CONSUME(graphQlTokenMap.Equals);\n            _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Pipe); });\n            _this.SUBRULE(_this.NamedType);\n            _this.MANY(function () {\n                _this.CONSUME1(graphQlTokenMap.Pipe);\n                _this.SUBRULE1(_this.NamedType);\n            });\n        });\n        _this.UnionTypeExtension = _this.RULE('UnionTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Union);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE(_this.UnionMemberTypes); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE1(_this.UnionMemberTypes); } },\n            ]);\n        });\n        _this.EnumTypeDefinition = _this.RULE('EnumTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Enum);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.EnumValuesDefinition); });\n        });\n        _this.EnumValuesDefinition = _this.RULE('EnumValuesDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.EnumValueDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.EnumValueDefinition = _this.RULE('EnumValueDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.SUBRULE(_this.EnumValue);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n        });\n        _this.EnumTypeExtension = _this.RULE('EnumTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Enum);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE(_this.EnumValuesDefinition); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE1(_this.EnumValuesDefinition); } },\n            ]);\n        });\n        _this.InputObjectTypeDefinition = _this.RULE('InputObjectTypeDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.Input);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.InputFieldsDefinition); });\n        });\n        _this.InputFieldsDefinition = _this.RULE('InputFieldsDefinition', function () {\n            _this.CONSUME(graphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.InputValueDefinition); });\n            _this.CONSUME(graphQlTokenMap.RCurly);\n        });\n        _this.InputObjectTypeExtension = _this.RULE('InputObjectTypeExtension', function () {\n            _this.CONSUME(graphQlTokenMap.Extend);\n            _this.CONSUME(graphQlTokenMap.Input);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OR([\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.Directives, { ARGS: [true /* isConst */] });\n                        _this.OPTION(function () { return _this.SUBRULE1(_this.InputFieldsDefinition); });\n                    },\n                },\n                { ALT: function () { return _this.SUBRULE(_this.InputFieldsDefinition); } },\n            ]);\n        });\n        _this.DirectiveDefinition = _this.RULE('DirectiveDefinition', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Description); });\n            _this.CONSUME(graphQlTokenMap.DirectiveToken);\n            _this.CONSUME(graphQlTokenMap.At);\n            _this.CONSUME(graphQlTokenMap.Name);\n            _this.OPTION1(function () { return _this.SUBRULE(_this.ArgumentsDefinition); });\n            _this.CONSUME(graphQlTokenMap.On);\n            _this.SUBRULE(_this.DirectiveLocations);\n        });\n        _this.DirectiveLocations = _this.RULE('DirectiveLocations', function () {\n            _this.OPTION(function () { return _this.CONSUME(graphQlTokenMap.Pipe); });\n            _this.SUBRULE(_this.DirectiveLocation);\n            _this.MANY(function () {\n                _this.CONSUME1(graphQlTokenMap.Pipe);\n                _this.SUBRULE1(_this.DirectiveLocation);\n            });\n        });\n        _this.DirectiveLocation = _this.RULE('DirectiveLocation', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.ExecutableDirectiveLocation); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeSystemDirectiveLocation); } },\n            ]);\n        });\n        _this.ExecutableDirectiveLocation = _this.RULE('ExecutableDirectiveLocation', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.QUERY); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.MUTATION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.SUBSCRIPTION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.FIELD); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.FRAGMENT_DEFINITION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.FRAGMENT_SPREAD); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.INLINE_FRAGMENT); } },\n            ]);\n        });\n        _this.TypeSystemDirectiveLocation = _this.RULE('TypeSystemDirectiveLocation', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.SCHEMA); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.SCALAR); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.OBJECT); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.FIELD_DEFINITION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.ARGUMENT_DEFINITION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.INTERFACE); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.UNION); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.ENUM); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.ENUM_VALUE); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.INPUT_OBJECT); } },\n                { ALT: function () { return _this.CONSUME(graphQlTokenMap.INPUT_FIELD_DEFINITION); } },\n            ]);\n        });\n        _this.lexer = new Lexer(tokenVocab);\n        return _this;\n    }\n    return BaseGraphQlParser;\n}(Parser));\nexport { BaseGraphQlParser };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar graphQlTokens = require('./tokens').graphQlTokens;\nimport { BaseGraphQlParser } from './BaseGraphQlParser';\nvar StandardGraphQlParser = /** @class */ (function (_super) {\n    __extends(StandardGraphQlParser, _super);\n    function StandardGraphQlParser(options) {\n        var _this = _super.call(this, options, graphQlTokens) || this;\n        _this.performSelfAnalysis();\n        return _this;\n    }\n    return StandardGraphQlParser;\n}(BaseGraphQlParser));\nexport { StandardGraphQlParser };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { StardogSparqlParser } from '../sparql/StardogSparqlParser';\n// Returns a custom visitor that extends the BaseVisitor for the\n// StardogGraphQlParser. When the visitor encounters any custom Stardog\n// directive that can contain a SPARQL expression, it locates the expression\n// and ensures that it parses as valid SPARQL (by delegating to the\n// StardogSparqlParser).\nexport var getStardogGraphQlVisitor = function (BaseVisitor) {\n    var StardogGraphQlVisitor = /** @class */ (function (_super) {\n        __extends(StardogGraphQlVisitor, _super);\n        function StardogGraphQlVisitor() {\n            var _this = _super.call(this) || this;\n            _this.sparqlErrors = [];\n            _this.visit = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                _super.prototype.visit.apply(_this, args);\n                return {\n                    errors: _this.sparqlErrors.map(function (error) { return (__assign({}, error, { name: \"SPARQL Error: \" + error.name })); }),\n                };\n            };\n            _this.BindDirective = function (ctx) {\n                var _a;\n                if (!ctx.StringValue) {\n                    // This directive uses a variable for the expression, rather than a\n                    // string, so we cannot parse the expression.\n                    // Possible TODO in future: locate the matching variable and parse it?\n                    return;\n                }\n                var stringValueNode = ctx.StringValue[0];\n                if (!stringValueNode.children.StringValueToken) {\n                    // A bind directive can be identified at times by the parser even when\n                    // there is no StringValueToken yet, due to error recovery.\n                    return;\n                }\n                var stringValueToken = stringValueNode.children\n                    .StringValueToken[0];\n                var errors = _this.$parseSparqlExpression(stringValueToken).errors;\n                // Possible future TODO: replace the CST nodes with thoe returned from\n                // the stardogSparqlParser, like we do for the IfClause and ThenClause\n                // in the SRS Parser\n                if (errors.length > 0) {\n                    (_a = _this.sparqlErrors).push.apply(_a, _this.$mapErrors(errors, stringValueToken, 1));\n                }\n            };\n            _this.ConditionalStardogDirective = function (ctx) {\n                var _a;\n                var conditionalStardogDirectiveArgumentsNode = ctx.ConditionalStardogDirectiveArguments[0];\n                if (!conditionalStardogDirectiveArgumentsNode.children.StringValue) {\n                    // This directive uses a variable for the expression, rather than a\n                    // string, so we cannot parse the expression.\n                    // Possible TODO in future: locate the matching variable and parse it?\n                    return;\n                }\n                var stringValueNode = conditionalStardogDirectiveArgumentsNode\n                    .children.StringValue[0];\n                var stringValueToken = stringValueNode.children\n                    .StringValueToken[0];\n                var errors = _this.$parseSparqlExpression(stringValueToken).errors;\n                // Possible future TODO: replace the CST nodes with those returned from\n                // the stardogSparqlParser, like we do for the IfClause and ThenClause\n                // in the SRS Parser\n                if (errors.length > 0) {\n                    (_a = _this.sparqlErrors).push.apply(_a, _this.$mapErrors(errors, stringValueToken, 1));\n                }\n            };\n            // Make the SPARQL errors have proper locations for use in error\n            // diagnostics. NOTE: This does NOT modify the locations of the error's\n            // `previousToken` property. If that ends up being needed, it's a TODO.\n            _this.$mapErrors = function (errors, tokenForOffset, offsetPadding) {\n                if (offsetPadding === void 0) { offsetPadding = 0; }\n                var tokenStartOffset = tokenForOffset.startOffset, tokenEndOffset = tokenForOffset.endOffset, tokenStartColumn = tokenForOffset.startColumn, tokenEndColumn = tokenForOffset.endColumn;\n                return errors.map(function (error) {\n                    var token = error.token;\n                    var errorStartOffset = token.startOffset, errorEndOffset = token.endOffset, errorStartColumn = token.startColumn, errorEndColumn = token.endColumn;\n                    return __assign({}, error, { token: __assign({}, token, { \n                            // error token's offsets might be set explicitly to null\n                            startOffset: tokenStartOffset + (errorStartOffset || 0) + offsetPadding, endOffset: tokenEndOffset + (errorEndOffset || 0) + offsetPadding, startColumn: tokenStartColumn + (errorStartColumn || 0) + offsetPadding, endColumn: tokenEndColumn + (errorEndColumn || 0) + offsetPadding, startLine: tokenForOffset.startLine, endLine: tokenForOffset.endLine }) });\n                });\n            };\n            _this.$parseSparqlExpression = function (stringValueToken) {\n                var innerExpressionImage = stringValueToken.image.slice(1, -1); // remove quotes\n                return _this.stardogSparqlParser.parse(innerExpressionImage, _this.stardogSparqlParser.Expression);\n            };\n            _this.$resetState = function () {\n                _this.sparqlErrors = [];\n            };\n            _this.stardogSparqlParser = new StardogSparqlParser();\n            _this.validateVisitor();\n            return _this;\n        }\n        return StardogGraphQlVisitor;\n    }(BaseVisitor));\n    return new StardogGraphQlVisitor();\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar _a = require('./tokens'), stardogGraphQlTokens = _a.stardogGraphQlTokens, stardogGraphQlTokenMap = _a.stardogGraphQlTokenMap;\nimport { BaseGraphQlParser } from './BaseGraphQlParser';\nimport { Parser } from 'chevrotain';\nimport { getStardogGraphQlVisitor } from 'graphql/StardogGraphQlVisitor';\nvar StardogGraphQlParser = /** @class */ (function (_super) {\n    __extends(StardogGraphQlParser, _super);\n    function StardogGraphQlParser(options) {\n        var _this = _super.call(this, options, stardogGraphQlTokens) || this;\n        _this.visitCst = function (cst) {\n            // To save resources while parsing, the visitor is a singleton.\n            if (!_this.stardogGraphQlVisitor) {\n                var BaseStardogGraphQlVisitor = _this.getBaseCstVisitorConstructorWithDefaults();\n                _this.stardogGraphQlVisitor = getStardogGraphQlVisitor(BaseStardogGraphQlVisitor);\n            }\n            else {\n                _this.stardogGraphQlVisitor.$resetState();\n            }\n            return _this.stardogGraphQlVisitor.visit(cst, _this.input);\n        };\n        _this.parse = function (document, entryRule) {\n            if (entryRule === void 0) { entryRule = _this.Document; }\n            _this.input = _this.tokenize(document);\n            var cst = entryRule.call(_this);\n            var sparqlErrors = _this.visitCst(cst).errors;\n            var graphQlErrors = _this.errors;\n            return {\n                errors: graphQlErrors.concat(sparqlErrors),\n                cst: cst,\n            };\n        };\n        _this.OperationDefinition = _this.OVERRIDE_RULE('OperationDefinition', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SelectionSet); } },\n                {\n                    ALT: function () {\n                        _this.SUBRULE(_this.OperationType);\n                        _this.OPTION(function () { return _this.CONSUME(stardogGraphQlTokenMap.Name); });\n                        _this.OPTION1(function () { return _this.SUBRULE(_this.VariableDefinitions); });\n                        _this.OPTION2(function () {\n                            return _this.SUBRULE(_this.Directives, {\n                                ARGS: [false /* isConst */, true /* isTopLevel */],\n                            });\n                        });\n                        _this.SUBRULE1(_this.SelectionSet);\n                    },\n                },\n            ]);\n        });\n        _this.Directives = _this.OVERRIDE_RULE('Directives', function (isConst, isTopLevel) {\n            if (isTopLevel === void 0) { isTopLevel = false; }\n            _this.AT_LEAST_ONE(function () {\n                _this.OR([\n                    {\n                        ALT: function () {\n                            return _this.SUBRULE(_this.StardogDirective, { ARGS: [isTopLevel] });\n                        },\n                    },\n                    { ALT: function () { return _this.SUBRULE(_this.Directive, { ARGS: [isConst] }); } },\n                ]);\n            });\n        });\n        _this.Field = _this.OVERRIDE_RULE('Field', function () {\n            _this.OPTION(function () { return _this.SUBRULE(_this.Alias); });\n            _this.CONSUME(stardogGraphQlTokenMap.Name);\n            _this.OPTION1(function () {\n                return _this.SUBRULE(_this.Arguments, {\n                    ARGS: [false /* isConst */, true /* isField */],\n                });\n            });\n            _this.OPTION2(function () { return _this.SUBRULE(_this.Directives); });\n            _this.OPTION3(function () { return _this.SUBRULE(_this.SelectionSet); });\n        });\n        _this.Arguments = _this.OVERRIDE_RULE('Arguments', function (isConst, isField) {\n            if (isField === void 0) { isField = false; }\n            _this.CONSUME(stardogGraphQlTokenMap.LParen);\n            _this.AT_LEAST_ONE(function () {\n                _this.OR([\n                    {\n                        GATE: function () { return isField; },\n                        ALT: function () { return _this.SUBRULE(_this.StardogArgument); },\n                    },\n                    { ALT: function () { return _this.SUBRULE(_this.Argument, { ARGS: [isConst] }); } },\n                ]);\n            });\n            _this.CONSUME(stardogGraphQlTokenMap.RParen);\n        });\n        _this.StardogArgument = _this.RULE('StardogArgument', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.OrderByArgument); } },\n                { ALT: function () { return _this.SUBRULE(_this.SkipArgument); } },\n                { ALT: function () { return _this.SUBRULE(_this.OffsetArgument); } },\n                { ALT: function () { return _this.SUBRULE(_this.FirstArgument); } },\n                { ALT: function () { return _this.SUBRULE(_this.LimitArgument); } },\n                { ALT: function () { return _this.SUBRULE(_this.IriArgument); } },\n            ]);\n        });\n        _this.StardogDirective = _this.RULE('StardogDirective', function (isTopLevel) {\n            _this.CONSUME(stardogGraphQlTokenMap.At);\n            _this.OR([\n                {\n                    GATE: function () { return !isTopLevel; },\n                    ALT: function () { return _this.SUBRULE(_this.ConditionalStardogDirective); },\n                },\n                {\n                    GATE: function () { return !isTopLevel; },\n                    ALT: function () { return _this.SUBRULE(_this.BareStardogDirective); },\n                },\n                { GATE: function () { return !isTopLevel; }, ALT: function () { return _this.SUBRULE(_this.BindDirective); } },\n                { GATE: function () { return isTopLevel; }, ALT: function () { return _this.SUBRULE(_this.PrefixDirective); } },\n                { GATE: function () { return isTopLevel; }, ALT: function () { return _this.SUBRULE(_this.ConfigDirective); } },\n            ]);\n        });\n        _this.ConditionalStardogDirective = _this.RULE('ConditionalStardogDirective', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.SkipDirective); } },\n                { ALT: function () { return _this.SUBRULE(_this.IncludeDirective); } },\n                { ALT: function () { return _this.SUBRULE(_this.FilterDirective); } },\n            ]);\n            _this.SUBRULE(_this.ConditionalStardogDirectiveArguments);\n        });\n        _this.SkipDirective = _this.RULE('SkipDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.SkipDirectiveToken);\n        });\n        _this.IncludeDirective = _this.RULE('IncludeDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.IncludeDirectiveToken);\n        });\n        _this.FilterDirective = _this.RULE('FilterDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.FilterDirectiveToken);\n        });\n        _this.ConditionalStardogDirectiveArguments = _this.RULE('ConditionalStardogDirectiveArguments', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.LParen);\n            _this.CONSUME(stardogGraphQlTokenMap.IfArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.Variable); } },\n                { ALT: function () { return _this.SUBRULE(_this.StringValue); } },\n            ]);\n            _this.CONSUME(stardogGraphQlTokenMap.RParen);\n        });\n        _this.BareStardogDirective = _this.RULE('BareStardogDirective', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.OptionalDirective); } },\n                { ALT: function () { return _this.SUBRULE(_this.TypeDirective); } },\n                { ALT: function () { return _this.SUBRULE(_this.HideDirective); } },\n            ]);\n        });\n        _this.OptionalDirective = _this.RULE('OptionalDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.OptionalDirectiveToken);\n        });\n        _this.TypeDirective = _this.RULE('TypeDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.TypeToken);\n        });\n        _this.HideDirective = _this.RULE('HideDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.HideDirectiveToken);\n        });\n        _this.BindDirective = _this.RULE('BindDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.BindDirectiveToken);\n            _this.CONSUME(stardogGraphQlTokenMap.LParen);\n            _this.CONSUME(stardogGraphQlTokenMap.ToArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.StringValue);\n            _this.CONSUME(stardogGraphQlTokenMap.RParen);\n        });\n        _this.PrefixDirective = _this.RULE('PrefixDirective', function (isConst) {\n            _this.CONSUME(stardogGraphQlTokenMap.PrefixDirectiveToken);\n            _this.SUBRULE(_this.Arguments, { ARGS: [isConst] });\n        });\n        _this.ConfigDirective = _this.RULE('ConfigDirective', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.ConfigDirectiveToken);\n            _this.CONSUME(stardogGraphQlTokenMap.LParen);\n            _this.OR([\n                {\n                    ALT: function () { return _this.SUBRULE(_this.ConfigDirectiveAlias); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.ConfigDirectiveGraph); },\n                },\n                {\n                    ALT: function () { return _this.SUBRULE(_this.ConfigDirectiveType); },\n                },\n            ]);\n            _this.CONSUME(stardogGraphQlTokenMap.RParen);\n        });\n        _this.ConfigDirectiveAlias = _this.RULE('ConfigDirectiveAlias', function () {\n            _this.SUBRULE(_this.AliasArgument);\n            _this.OPTION(function () {\n                _this.OR1([\n                    {\n                        ALT: function () {\n                            _this.SUBRULE(_this.GraphArgument);\n                            _this.OPTION1(function () { return _this.SUBRULE(_this.TypeArgument); });\n                        },\n                    },\n                    {\n                        ALT: function () {\n                            _this.SUBRULE1(_this.TypeArgument);\n                            _this.OPTION2(function () { return _this.SUBRULE1(_this.GraphArgument); });\n                        },\n                    },\n                ]);\n            });\n        });\n        _this.ConfigDirectiveGraph = _this.RULE('ConfigDirectiveGraph', function () {\n            _this.SUBRULE2(_this.GraphArgument);\n            _this.OPTION3(function () {\n                _this.OR2([\n                    {\n                        ALT: function () {\n                            _this.SUBRULE1(_this.AliasArgument);\n                            _this.OPTION4(function () { return _this.SUBRULE2(_this.TypeArgument); });\n                        },\n                    },\n                    {\n                        ALT: function () {\n                            _this.SUBRULE3(_this.TypeArgument);\n                            _this.OPTION5(function () { return _this.SUBRULE2(_this.AliasArgument); });\n                        },\n                    },\n                ]);\n            });\n        });\n        _this.ConfigDirectiveType = _this.RULE('ConfigDirectiveType', function () {\n            _this.SUBRULE4(_this.TypeArgument);\n            _this.OPTION6(function () {\n                _this.OR3([\n                    {\n                        ALT: function () {\n                            _this.SUBRULE3(_this.AliasArgument);\n                            _this.OPTION7(function () { return _this.SUBRULE3(_this.GraphArgument); });\n                        },\n                    },\n                    {\n                        ALT: function () {\n                            _this.SUBRULE4(_this.GraphArgument);\n                            _this.OPTION8(function () { return _this.SUBRULE4(_this.AliasArgument); });\n                        },\n                    },\n                ]);\n            });\n        });\n        _this.AliasArgument = _this.RULE('AliasArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.AliasArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.CONSUME(stardogGraphQlTokenMap.LCurly);\n            _this.AT_LEAST_ONE(function () { return _this.SUBRULE(_this.AliasArgumentField); });\n            _this.CONSUME(stardogGraphQlTokenMap.RCurly);\n        });\n        _this.AliasArgumentField = _this.RULE('AliasArgumentField', function () {\n            _this.SUBRULE(_this.Alias);\n            _this.SUBRULE(_this.StringValue);\n        });\n        _this.GraphArgument = _this.RULE('GraphArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.GraphArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.EnumValueOrString); } },\n                {\n                    ALT: function () {\n                        _this.CONSUME(stardogGraphQlTokenMap.LBracket);\n                        _this.MANY(function () { return _this.SUBRULE1(_this.EnumValueOrString); });\n                        _this.CONSUME(stardogGraphQlTokenMap.RBracket);\n                    },\n                },\n            ]);\n        });\n        _this.EnumValueOrString = _this.RULE('EnumValueOrString', function () {\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.EnumValue); } },\n                { ALT: function () { return _this.CONSUME(stardogGraphQlTokenMap.StringToken); } },\n            ]);\n        });\n        _this.TypeArgument = _this.RULE('TypeArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.TypeToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.BooleanValue);\n        });\n        _this.OrderByArgument = _this.RULE('OrderByArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.OrderByArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.OR([\n                { ALT: function () { return _this.SUBRULE(_this.OrderByArgumentField); } },\n                {\n                    ALT: function () {\n                        _this.CONSUME(stardogGraphQlTokenMap.LBracket);\n                        _this.AT_LEAST_ONE(function () { return _this.SUBRULE1(_this.OrderByArgumentField); });\n                        _this.CONSUME(stardogGraphQlTokenMap.RBracket);\n                    },\n                },\n            ]);\n        });\n        _this.OrderByArgumentField = _this.RULE('OrderByArgumentField', function () {\n            _this.OR([\n                { ALT: function () { return _this.CONSUME(stardogGraphQlTokenMap.Name); } },\n                {\n                    ALT: function () {\n                        _this.CONSUME(stardogGraphQlTokenMap.LCurly);\n                        _this.OR1([\n                            {\n                                ALT: function () {\n                                    _this.SUBRULE(_this.OrderByArgumentFieldProperty);\n                                    _this.OPTION(function () {\n                                        return _this.SUBRULE(_this.OrderByArgumentDescProperty);\n                                    });\n                                },\n                            },\n                            {\n                                ALT: function () {\n                                    _this.SUBRULE1(_this.OrderByArgumentDescProperty);\n                                    _this.SUBRULE1(_this.OrderByArgumentFieldProperty);\n                                },\n                            },\n                        ]);\n                        _this.CONSUME(stardogGraphQlTokenMap.RCurly);\n                    },\n                },\n            ]);\n        });\n        _this.OrderByArgumentFieldProperty = _this.RULE('OrderByArgumentFieldProperty', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.OrderByArgumentFieldPropertyToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.CONSUME(stardogGraphQlTokenMap.Name);\n        });\n        _this.OrderByArgumentDescProperty = _this.RULE('OrderByArgumentDescProperty', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.OrderByArgumentDescPropertyToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.BooleanValue);\n        });\n        _this.SkipArgument = _this.RULE('SkipArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.SkipDirectiveToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.IntValue);\n        });\n        _this.OffsetArgument = _this.RULE('OffsetArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.OffsetArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.IntValue);\n        });\n        _this.FirstArgument = _this.RULE('FirstArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.FirstArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.IntValue);\n        });\n        _this.LimitArgument = _this.RULE('LimitArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.LimitArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.IntValue);\n        });\n        _this.IriArgument = _this.RULE('IriArgument', function () {\n            _this.CONSUME(stardogGraphQlTokenMap.IriArgumentToken);\n            _this.CONSUME(stardogGraphQlTokenMap.Colon);\n            _this.SUBRULE(_this.EnumValue);\n        });\n        Parser.performSelfAnalysis(_this);\n        return _this;\n    }\n    return StardogGraphQlParser;\n}(BaseGraphQlParser));\nexport { StardogGraphQlParser };\n","export * from './BaseGraphQlParser';\nexport * from './StandardGraphQlParser';\nexport * from './StardogGraphQlParser';\n// Convenience imports/exports that aren't core functionality:\n// NOTE: Tokens MUST be imported using CommonJS syntax; see here: https://github.com/SAP/chevrotain/issues/345\nexport var graphqlTokens = require('./tokens');\n"],"sourceRoot":""}